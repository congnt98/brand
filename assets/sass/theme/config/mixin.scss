@mixin flexBox(
  $direction: row,
  $justify: flex-start,
  $align: flex-start,
  $wrap: wrap
) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
  flex-wrap: $wrap;
}

@mixin flexCenter {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flexCenterAlign {
  display: flex;
  align-items: center;
}

@mixin flexCenterJustify {
  display: flex;
  justify-content: center;
}

@mixin flexWrap {
  display: flex;
  flex-wrap: wrap;
}

@mixin reset($type: null) {
  @if $type == spacing {
    margin: 0;
    padding: 0;
  } @else if $type == list {
    margin: 0;
    padding: 0;
    list-style: none;
    & li {
      margin: 0;
      padding: 0;
    }
  } @else if $type == everything {
    float: none;
    position: static;
    height: auto;
    width: auto;
    margin: 0;
    padding: 0;
    background-color: transparent;
    border: none;
    list-style: none;
    inset: unset;
    transform: unset;
  }
}

@mixin centerPosition($pos) {
  position: absolute;
  @if $pos == "mid" {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $pos == "left" {
    left: 50%;
    transform: translateX(-50%);
  } @else if $pos == "top" {
    top: 50%;
    transform: translateY(-50%);
  }
}

.flex {
  display: flex;
}

.flex-center {
  @include flexCenter();
}

.wrapper {
  max-width: 1920px;
  margin: 0 auto;
  width: 100%;
}

@mixin container {
  max-width: 1080px;
  margin: 0 auto;
}

@mixin font-light($font-size, $line-height, $color) {
  font-size: $font-size;
  line-height: $line-height;
  color: $color;
  font-weight: 300;
}

@mixin font-regular($font-size, $line-height, $color) {
  font-size: $font-size;
  line-height: $line-height;
  color: $color;
  font-weight: 400;
}

@mixin font-medium($font-size, $line-height, $color) {
  font-size: $font-size;
  line-height: $line-height;
  color: $color;
  font-weight: 500;
}

@mixin font-semi-bold($font-size, $line-height, $color) {
  font-size: $font-size;
  line-height: $line-height;
  color: $color;
  font-weight: 600;
}

@mixin font-bold($font-size, $line-height, $color) {
  font-size: $font-size;
  line-height: $line-height;
  color: $color;
  font-weight: 700;
}

@mixin btn($type: null) {
  display: inline-block;
  position: relative;
  background-color: $orange-0;
  border: 1px solid $orange-0;
  font-size: 20px;
  line-height: 42px;
  border-radius: 40px;
  text-align: center;
  padding-top: 18px;
  padding-bottom: 18px;
  color: #fff;
  a {
    @include font-semi-bold(20px, 42px, #fff);
  }

  .icon {
    position: absolute;
    right: 30px;
    top: 50%;
    transform: translateY(-50%);
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
  }

  &:hover,
  &:focus {
    cursor: pointer;
    background-color: #fff;
    color: $orange-0;
    a {
      color: $orange-0;
    }
  }

  @if $type == default {
    padding-left: 160px;
    padding-right: 160px;

    .arrow-right {
      width: 12px;
      height: 19px;
      background-image: url("../../images/icon-right.svg");
    }

    &:hover,
    &:focus {
      .arrow-right {
        background-image: url("../../images/icon-right-hover.svg");
      }
    }
  } @else if $type == download {
    padding-left: 40px;
    padding-right: 90px;

    .download {
      width: 20px;
      height: 20px;
      right: 40px;
      background-image: url("../../images/icon-download.svg");
    }

    &:hover,
    &:focus {
      .download {
        background-image: url("../../images/icon-download-hover.svg");
      }
    }
  }
}
